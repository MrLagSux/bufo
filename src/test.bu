func ack(m: u32, n: u32) -> u32 {
    if (m == 0) { return n + 1; }
    if (n == 0) { return ack(m - 1, 1); }
    return ack(m - 1, ack(m, n - 1));
}

func factorial(n: u32) -> u32 {
    if (n <= 1) { return 1; }
    return n * factorial(n - 1);
}

func test(n: u32, m: u32) -> u32 {
    n = n - 1;
    if (n > m) { return test(m, n); }
    return n * n + m * m - (n / (m + 5));
}

func main() {
    let a: u32 = factorial(ack(factorial(2), factorial(2)));
    let c: u32 = test(10, 8);
    
    let v: i32 = 5;
    let arr1: i32[1, 1] = [[42069]];
    let arr: i32[2, 2, 3] = [
        [
            [v * v - 3, 1, 2],
            [3, 4, 5],
        ],
        [
            [6, 7, arr1[0, 0]],
            [9, 10, 11],
        ]
    ];
    let b1: usize = 2;
    let a1: i32 = arr[1, 1, b1];
    arr[0, 1, b1] = 409 + a1;
    test(1, 1);
}