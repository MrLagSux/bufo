// thread 'main' panicked at src\frontend\parser.rs:793:41:
// attempt to subtract with overflow
// note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace
// 

extern qev(iqwplep: u64, rzq: Hfy, yeht: u64, k: Hfy) -> i64;
extern hcfl(cm: u32) -> u64;
class Onc {
    qzzfk: i64;
    ds: i32;
    cg: Mvess;
    nntlixnlxt: Vfxcpaywn;
    func gsfwpmqpp(fgviilvyz: u32, gaw: Nglkrhhhqy, ketnruhvwc: Pijwr, hbcuhakv: Pijwr, wlh: bool) -> i32 
    {
    return 2500184552240453130;
    !(1) > czlrdf % 6988908871957969717 / bchbma;
    break;
    while (2981956804602239823) 
        {
        continue;
                    {
            if ((16162151140889263650)) 
                {
                gwrj;
                awnjmbawcc;
                continue;
                }

            return -!-lxu;
            return 17167673975232589086;
            }
        true;
        586439261101004161;
        }

    }


    constructor(dvftmiej: Nglkrhhhqy, dvmf: Adyw, ryh: u32, juuqeigv: u64, lyjm: Gxzamseen) {
    {
    let o: Hfy = 13548142909144611880;
    break;
    !!15987907645597655407 < --18886195075432635;

}

}
class Oarifgrdh {
    knpqg: Nglkrhhhqy;
    kvxdbd: bool;
    w: bool;
    yu: i64;
    func ht() -> i64 
    {
    return 11782728948031149775;
    if (-9333213635251633620) 
        {
        -236797218066685501;

 else 
        {
        while (true) 
            {
            Gpdslfjyd(true).nsvfivfef;
            11802482855965495849;
            }

        -7764402317328087651;
        (vi).cvo;
        }

    (jqwdiglgp / 12524267230264876927);
    continue;
    }


    func mjqiybg(m: Oarifgrdh, rwnldpghz: bool) -> u64 
    {
    }


    func vmon(hh: i64, dyihcp: u64, kdvxsa: bool, ljqraxmstn: Mon, uyioquctzk: i32) -> bool 
    (8733212355210542779 / (1 * 1 | (1)));
    return 5041854504992696916;
    !Gpdslfjyd();
    }


    func jgafh(pm: u64) -> bool 
    {
    while (true * 13663131980828323004.dhjjkjkrq) 
        {
        while (ocomscyx.i) 
            {
            continue;
            Mon();
            return Onc(hcfl((-1289282832620152735) ^ ((1)), Gpdslfjyd((false)), 869417564389750720), 2193328774294783248 | ncneuped.k);
            continue;
            }

        return 629989531879060828;
        17655235391884319811;
        }

    while ((true)) 
        {
        while (true) 
            {
            -17712314677510047762;
            }

        let xdwnnpmqb: Zqqghym = (false);
        9134596132198614502;
        continue;
        }

    }


    constructor(jllihnxwe: Oarifgrdh, gj: i64, tqjf: Oarifgrdh, i: Oarifgrdh) {
    }
}

    constructor(mgcdaxbwfx: u32, vwpvi: Gxzamseen) {
    {
    -!(upn) < jpawmtlf.wvuvz.syfrjusj;
    if (true) 
        break;
        break;
        irkzvidtjc;
        84881150125026310;
        }
 else 
        {
        }

    true;
    continue;
    }
}

}
class Edbkjdociy {
    wbfbgn: Zqqghym;
    acvaorh: bool;
    tcatcwh: Adyw;
    cr: Mvess;
    func vpfsnj() -> Gxzamseen 
    {
    -6598414227522439455.jpvwb;
    if (aysaheguk = !msyobk >= true) 
        {
        qk;
        break;
        if ((-true.ouwj)) 
            {
            if (false) 
                {
                if (-gaxyzjuhr.uwhshe) 
                    {
                    (-1105677287382408769);
                    14980882100782141372;
                    if (true) 
{}
                    if (3189378301919860601) 
{} else 
{}
                    }

                -15831750047223483184;
                (11149046817522974367);
                }
 else 
                {
                if (false) 
                    {
                    10101611181697143116;
                    {}                    }
 else 
                    {
                    Pijwr(-5636012371327042004, (93716036775962209), 16864706277475299131, false, -Pijwr((1)) <= (false));
                    let aekrlpq: Gpdslfjyd = 10958629763646654946.b.vivzngu;
                    continue;
                    if ((ienhhg)) 
{} else 
{}
                    let zuftketpfe: i64 = false + true * ht = 15748805791653622528;
                    }

                false;
                }

            (2926775934561237992);
            zwnk;
            (89305668618175653);
            break;

 else 
            {
            dzurebqr;
            if (3178817075105990769) 
                {
                }
 else 
                {
                let dfegtbvby: u64 = 14681861747058418180;
                while (15050880039494036320.hkqzkyoy | ort) 
                    {
                    continue;
                    sqodmi;
                    !535601262410410716;
                    }

                10203062910166344595;
                }

            2935563507757522136 >= -9518165962217901430;
            }

        if (wwucuonarc) 
            {
            (raz) * doxz;
            }
 else 
            {
            (true.khrolkhps);
            false;
            return -1526104163476687166.lxfzqzh;
            }

        }
 else 
        {
        return edlouu().fc;
        let kr: i64 = 13061896368564741181;
        if (ikwemxmyc >= -17375887344954762772 <= 5840741349142658962) 
            {
            9249078150319235996;


        -17099925226717464863;
        }

    continue;
    }


    func vrvorrp(jjikc: i64, qjlo: i32, czw: Gpdslfjyd, kn: Zqqghym, s: Icrsyb) -> Csesbcpowh 
    {
    -16524345449206020022;
    while (10569015200675604690) 
        {
        break;
        while (14094270321499915466 ^ k) 
            {
            }

        Nglkrhhhqy(Gpdslfjyd(uriounu, 15452093935395677785, 1275235330905218610, -(1) & -8502661838637378058.xi), (-16167709504019312325));
        (-10695257295318735474) / -6904480786814091906;
        }

    }


    func bnqlxmddd(uzikkrkb: i64, e: u64, nbn: i64) -> u32 
    {
    }


}
class Ljrm {
    edenwzjw: i64;
    vmlktsig: Csesbcpowh;
    oemkjedfig: i32;
    mqr: Gpdslfjyd;
    func fynkaxiuqu(ldhdpynm: Nrcdvfbjrq, midif: i32, l: bool, qp: u64) -> Phhjlzreco 
    {
    break;
    while (15685690744039451676) 
        j;
        let frrbpxhq: Gpdslfjyd = 12002232729127656298.xtf;
        break;
        }

    }


    func owq(ehmne: Gxzamseen, jnzuufmj: i64, ilynr: Adyw, ygcsof: Onc) -> Mon 
    {
    return 13292450681568810816;
    while ((false).nmyoeb) 
        break;
        false.buinkpozpp;
        continue;
        let jqtdsnq: u64 = false;


    imrbycork / -uzfbrz;
    akgmv.xnqcjsbdn != 17674498118483376158 + 15609807829945477719;
    utytfmyru;
    }


    func x() -> Vfxcpaywn 
    {
    }


    func j(ksi: Nglkrhhhqy, oc: Onc, yoktzd: Mon, gdpbsv: i32, vjwjj: Mon) -> Mon 
    {
    !jzmw();
    (sxc.thy);
    -ucihfnoz;
    !Icrsyb((-1), 13706277015762263880, (kttn)).vndjoiflj;



    constructor(w: Zqqghym, whhfujad: Gxzamseen) {
    {
    while (zxy) 
        {
        true;
        while ((twowjtzg)) 
            {
            true & 1487387986925187627.cx != true;
            while (wjtdicvf) 
                {
                Icrsyb(-9396154842489978045);
                }

            (!-1 & 1 >= 7362130562034923785);
            nygjgxsktd;
            }

        break;
        }

    break;
    }
}

}
class Lvanh {
    func qdqdqeanu() -> u32 
    {
    continue;
    15369894721232883419;
    if (false) 
        {
        Zqqghym(-true.ityugbgl, 1884889868631410299, 9078219569321155684, -11094429985170840084);
        }

    502381884033187960;
    }


    func ad(qcecgcq: Onc, ijaa: Adyw, fqlfxf: Gpdslfjyd) -> i32 
    {
    true;
    break;
    }


    func glltgsmdeq(xhvqyxfrg: i32, l: u32) -> bool 
    {
    !true <= ((1).fdesk);
    break;
    }


}
func fwycskw(f: u64, foayhcbp: bool, u: Vfxcpaywn, vht: i32) -> u64 
    {
    if (if) 
        {
        let xwtioaot: Ionh = 14369391298501380042;
        }

    }


func main() -> u32 { return 0; }
